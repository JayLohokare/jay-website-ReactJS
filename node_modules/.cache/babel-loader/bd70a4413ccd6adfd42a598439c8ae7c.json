{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = require('./LocationUtils');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _DOMUtils = require('./DOMUtils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar HashChangeEvent = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: _PathUtils.stripLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  },\n  slash: {\n    encodePath: _PathUtils.addLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');\n  var globalHistory = window.history;\n  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);\n    return (0, _LocationUtils.createLocation)(path);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }; // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [(0, _PathUtils.createPath)(initialLocation)]; // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));\n  };\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  };\n\n  var go = function go(n) {\n    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n};\n\nexports.default = createHashHistory;","map":{"version":3,"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_warning","require","_warning2","_interopRequireDefault","_invariant","_invariant2","_LocationUtils","_PathUtils","_createTransitionManager","_createTransitionManager2","_DOMUtils","obj","default","HashChangeEvent","HashPathCoders","hashbang","encodePath","path","charAt","stripLeadingSlash","decodePath","substr","noslash","addLeadingSlash","slash","getHashPath","href","window","location","hashIndex","indexOf","substring","pushHashPath","hash","replaceHashPath","replace","slice","createHashHistory","props","undefined","canUseDOM","globalHistory","history","canGoWithoutReload","supportsGoWithoutReloadUsingHash","_props$getUserConfirm","getUserConfirmation","getConfirmation","_props$hashType","hashType","basename","stripTrailingSlash","_HashPathCoders$hashT","getDOMLocation","hasBasename","stripBasename","createLocation","transitionManager","setState","nextState","notifyListeners","action","forceNextPop","ignorePath","handleHashChange","encodedPath","prevLocation","locationsAreEqual","createPath","handlePop","confirmTransitionTo","ok","revertPop","fromLocation","toLocation","toIndex","allPaths","lastIndexOf","fromIndex","delta","go","initialLocation","createHref","push","state","hashChanged","prevIndex","nextPaths","n","goBack","goForward","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","block","prompt","unblock","setPrompt","listen","listener","unlisten","appendListener"],"sources":["/Users/jaylohokare/Desktop/jay-website-ReactJS/node_modules/history/createHashHistory.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = require('./LocationUtils');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _DOMUtils = require('./DOMUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HashChangeEvent = 'hashchange';\n\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: _PathUtils.stripLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  },\n  slash: {\n    encodePath: _PathUtils.addLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');\n\n  var globalHistory = window.history;\n  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();\n\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n\n  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';\n\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n\n    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);\n\n    return (0, _LocationUtils.createLocation)(path);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n\n      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  var initialLocation = getDOMLocation();\n  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));\n  };\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n\n        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n        nextPaths.push(path);\n        allPaths = nextPaths;\n\n        setState({ action: action, location: location });\n      } else {\n        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createHashHistory;"],"mappings":"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"},"metadata":{},"sourceType":"script"}